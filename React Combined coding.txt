import { useState } from 'react';

export default function StudyHubTimetable() {
  const [showTimetable, setShowTimetable] = useState(false);
  const [subjects, setSubjects] = useState([
    { name: 'Networks 511', difficulty: 'hard' },
    { name: 'Programming 622', difficulty: 'medium' },
    { name: 'Cloud Computing', difficulty: 'hard' }
  ]);
  const [preferences, setPreferences] = useState('I need more time for Network 511');
  const [studyDays, setStudyDays] = useState('7 days (Full week)');
  const [studyHours, setStudyHours] = useState('4 hrs');
  const [focusTime, setFocusTime] = useState('Morning (Most focused)');

  const handleDifficultyToggle = (index) => {
    const newSubjects = [...subjects];
    if (newSubjects[index].difficulty === 'hard') {
      newSubjects[index].difficulty = 'medium';
    } else if (newSubjects[index].difficulty === 'medium') {
      newSubjects[index].difficulty = '';
    } else {
      newSubjects[index].difficulty = 'hard';
    }
    setSubjects(newSubjects);
  };

  const handleSubjectNameChange = (index, value) => {
    const newSubjects = [...subjects];
    newSubjects[index].name = value;
    setSubjects(newSubjects);
  };

  const addSubject = () => {
    setSubjects([...subjects, { name: '', difficulty: '' }]);
  };

  const weekData = [
    { day: 'Monday', sessions: 4 },
    { day: 'Tuesday', sessions: 4 },
    { day: 'Wednesday', sessions: 4 },
    { day: 'Thursday', sessions: 3 },
    { day: 'Friday', sessions: 4 },
    { day: 'Saturday', sessions: 4 },
    { day: 'Sunday', sessions: 4 }
  ];

  const sessionData = [
    { subject: 'Networks 511', time: '8:00 AM', difficulty: 'hard' },
    { subject: 'Cloud Computing', time: '10:00 AM', difficulty: 'hard' },
    { subject: 'Programming', time: '3:00 PM', difficulty: 'med' },
    { subject: 'Networks 511', time: '6:00 PM', difficulty: 'hard' }
  ];

  return (
    <div className="min-h-screen bg-blue-100 font-sans">
      {!showTimetable ? (
        // Form Page
        <div className="max-w-4xl mx-auto p-5">
          {/* Header */}
          <div className="text-center mb-10">
            <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-blue-500 rounded-full mx-auto mb-4 flex items-center justify-center text-white text-2xl font-bold">
              SH
            </div>
            <h1 className="text-4xl font-bold text-gray-800 mb-3">Study Hub Timetable Generator</h1>
            <p className="text-gray-600 max-w-lg mx-auto">
              Create your personalized study schedule based on your subjects, difficulty levels, and preferences
            </p>
          </div>

          {/* Form Section */}
          <div className="bg-white rounded-xl p-8 mb-5 shadow-lg">
            <h2 className="text-gray-800 text-xl mb-5 flex items-center">
              <span className="mr-2">‚öôÔ∏è</span>
              Your Study Preferences
            </h2>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-5 mb-8">
              <div className="flex flex-col">
                <label className="font-semibold mb-2 text-gray-700 text-sm">
                  üìÖ Available Study Days
                </label>
                <select 
                  value={studyDays}
                  onChange={(e) => setStudyDays(e.target.value)}
                  className="p-3 border-2 border-gray-300 rounded-lg text-base bg-white focus:outline-none focus:border-green-500"
                >
                  <option>7 days (Full week)</option>
                  <option>5 days (Weekdays only)</option>
                  <option>6 days (No Sunday)</option>
                </select>
              </div>
              
              <div className="flex flex-col">
                <label className="font-semibold mb-2 text-gray-700 text-sm">
                  ‚è∞ Daily Study Hours
                </label>
                <select 
                  value={studyHours}
                  onChange={(e) => setStudyHours(e.target.value)}
                  className="p-3 border-2 border-gray-300 rounded-lg text-base bg-white focus:outline-none focus:border-green-500"
                >
                  <option>4 hrs</option>
                  <option>2 hrs</option>
                  <option>3 hrs</option>
                  <option>5 hrs</option>
                  <option>6 hrs</option>
                </select>
              </div>
              
              <div className="flex flex-col">
                <label className="font-semibold mb-2 text-gray-700 text-sm">
                  üéØ Preferred Focus Time
                </label>
                <select 
                  value={focusTime}
                  onChange={(e) => setFocusTime(e.target.value)}
                  className="p-3 border-2 border-gray-300 rounded-lg text-base bg-white focus:outline-none focus:border-green-500"
                >
                  <option>Morning (Most focused)</option>
                  <option>Afternoon</option>
                  <option>Evening</option>
                  <option>Night</option>
                </select>
              </div>
            </div>
          </div>

          {/* Subjects Section */}
          <div className="bg-white rounded-xl p-8 mb-5 shadow-lg">
            <h3 className="text-gray-800 mb-5 flex items-center text-lg">
              <span className="mr-2">üìö</span>
              Your Subjects & Difficulty
            </h3>
            
            {subjects.map((subject, index) => (
              <div key={index} className="grid grid-cols-1 md:grid-cols-[1fr_120px] gap-4 mb-4">
                <input
                  type="text"
                  placeholder="Enter subject name"
                  value={subject.name}
                  onChange={(e) => handleSubjectNameChange(index, e.target.value)}
                  className="p-3 border-2 border-gray-300 rounded-lg text-base bg-white focus:outline-none focus:border-green-500"
                />
                <button
                  onClick={() => handleDifficultyToggle(index)}
                  className={`p-2 px-4 border-2 rounded-md font-semibold transition-all ${
                    subject.difficulty === 'hard'
                      ? 'bg-red-500 text-white border-red-500'
                      : subject.difficulty === 'medium'
                      ? 'bg-orange-500 text-white border-orange-500'
                      : 'bg-white text-gray-800 border-gray-300'
                  }`}
                >
                  {subject.difficulty === 'hard' ? 'Hard' : subject.difficulty === 'medium' ? 'Medium' : 'Select'}
                </button>
              </div>
            ))}
            
            <button
              onClick={addSubject}
              className="bg-green-500 text-white border-none p-3 px-6 rounded-lg font-semibold mt-5 w-full hover:bg-green-600 transition-colors"
            >
              + Add Subject
            </button>
          </div>

          {/* Preferences Section */}
          <div className="bg-white rounded-xl p-8 mb-5 shadow-lg">
            <h3 className="text-gray-800 mb-4 flex items-center text-lg">
              <span className="mr-2">üìù</span>
              Additional Preferences
            </h3>
            <textarea
              value={preferences}
              onChange={(e) => setPreferences(e.target.value)}
              className="w-full p-4 border-2 border-gray-300 rounded-lg resize-y min-h-[80px] focus:outline-none focus:border-green-500"
              placeholder="I need more time for Network 511"
            />
          </div>

          <button
            onClick={() => setShowTimetable(true)}
            className="bg-blue-500 text-white border-none py-4 px-10 rounded-lg text-lg font-semibold block mx-auto mt-8 hover:bg-blue-600 transition-colors"
          >
            Generate Timetable
          </button>
        </div>
      ) : (
        // Timetable Page
        <div className="max-w-6xl mx-auto p-5">
          <div className="bg-white rounded-xl p-8 mb-8 text-center shadow-lg">
            <h1 className="text-red-600 text-3xl mb-8 flex items-center justify-center">
              <span className="mr-3">üìÖ</span>
              Your Personalized Study Timetable
            </h1>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-10 mb-8">
              <div className="text-center">
                <div className="text-5xl font-bold text-gray-800">28</div>
                <div className="text-gray-600 mt-1">Weekly Hours</div>
              </div>
              <div className="text-center">
                <div className="text-5xl font-bold text-gray-800">2</div>
                <div className="text-gray-600 mt-1">Hard Subjects</div>
              </div>
              <div className="text-center">
                <div className="text-5xl font-bold text-gray-800">42</div>
                <div className="text-gray-600 mt-1">Study Sessions</div>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5 mb-8">
            {weekData.map((day, dayIndex) => (
              <div key={dayIndex} className="bg-indigo-700 text-white rounded-xl overflow-hidden">
                <div className="bg-indigo-900 p-4 text-center font-bold text-lg">
                  {day.day}
                </div>
                <div className="p-5">
                  {sessionData.slice(0, day.sessions).map((session, sessionIndex) => (
                    <div key={sessionIndex} className={`flex justify-between items-center mb-4 ${sessionIndex < day.sessions - 1 ? 'pb-3 border-b border-white/20' : ''}`}>
                      <div className="flex-1">
                        <div className="font-semibold mb-0.5">{session.subject}</div>
                        <div className="text-sm opacity-80">{session.time}</div>
                      </div>
                      <div className={`py-1 px-2 rounded-xl text-xs font-semibold ${
                        session.difficulty === 'hard' ? 'bg-red-500' : 'bg-orange-500'
                      }`}>
                        {session.difficulty === 'hard' ? 'Hard' : 'Med'}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>

          <div className="bg-gray-100 border-l-4 border-blue-500 rounded-r-lg p-6 mt-8">
            <h3 className="text-blue-500 mb-4 flex items-center text-lg">
              <span className="mr-2">üí°</span>
              Study Recommendations
            </h3>
            <ul className="list-none">
              <li className="mb-3 pl-5 relative before:content-['‚Ä¢'] before:text-blue-500 before:font-bold before:absolute before:left-0">
                Focus on <strong>Networks511</strong> during your peak focus times (mornings)
              </li>
              <li className="mb-3 pl-5 relative before:content-['‚Ä¢'] before:text-blue-500 before:font-bold before:absolute before:left-0">
                Group similar subjects together to improve retention
              </li>
              <li className="mb-3 pl-5 relative before:content-['‚Ä¢'] before:text-blue-500 before:font-bold before:absolute before:left-0">
                Take a 5-10 minute break every 45-60 minutes of studying
              </li>
              <li className="mb-3 pl-5 relative before:content-['‚Ä¢'] before:text-blue-500 before:font-bold before:absolute before:left-0">
                Review difficult topics at the beginning of your study sessions
              </li>
            </ul>
          </div>

          <button
            onClick={() => setShowTimetable(false)}
            className="bg-gray-600 text-white border-none py-3 px-8 rounded-lg font-semibold block mx-auto mt-8 hover:bg-gray-700 transition-colors"
          >
            ‚Üê Back to Form
          </button>
        </div>
      )}
    </div>
  );
}